#******************************************************************
#
# Copyright 2015 Intel Mobile Communications GmbH All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
##
# Plugin Interface build script
##

import os
import os.path

Import('env')

target_os = env.get('TARGET_OS')

######################################################################
# Build flags
######################################################################

env.PrependUnique(CPPPATH=[
    '#/resource/c_common',
    '#/resource/c_common/oic_malloc/include',
    '#/resource/c_common/oic_string/include',
    '#/resource/oc_logger/include',
    '#/resource/csdk/logger/include',
    '#/resource/csdk/include',
    '#/resource/csdk/stack/include',
])
env.AppendUnique(CPPPATH=[
    '#/plugins/include',
    '#/plugins/include/internal',
    '#/plugins/zigbee_wrapper/include'
])

if target_os not in ['windows']:
    env.AppendUnique(CPPDEFINES=['WITH_POSIX'])

if target_os in ['darwin', 'ios']:
    env.AppendUnique(CPPDEFINES=['_DARWIN_C_SOURCE'])

env.AppendUnique(CXXFLAGS=['-std=c++0x', '-Wall', '-Wextra', '-Werror'])
env.PrependUnique(LIBS=['telegesis_wrapper'])

#####################################################################
# Source files and Target(s)
######################################################################

zw_src = [
    'zigbee_wrapper.c',
]

if target_os in ['android', 'tizen']:
    calib = env.SharedLibrary('zigbee_wrapper', zw_src)
else:
    calib = env.StaticLibrary('zigbee_wrapper', zw_src)
env.InstallTarget(calib, 'libzigbee_wrapper')
env.UserInstallTargetLib(calib, 'libzigbee_wrapper')
